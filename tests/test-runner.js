/*
*
*
*
*
*
*
*
*
*
*
*
*       DO NOT EDIT THIS FILE
*       For FCC testing purposes!
*
*
*
*
*
*
*
*
*
*
*
*/
import { createRequire } from 'module';
const require = createRequire(import.meta.url);

const analyser = require('./assertion-analyser');
const EventEmitter = require('events').EventEmitter;
const Mocha = require('mocha');
const fs = require('fs');
const path = require('path');
require("@babel/register");

const mocha = new Mocha();
const testDir = './tests';

// Add each .js file to the mocha instance
fs.readdirSync(testDir).filter(function(file){
  return file.substr(-3) === '.js';
}).forEach(function(file){
  mocha.addFile(path.join(testDir, file));
});

const emitter = new EventEmitter();  
emitter.run = function () {
  const tests = [];
  let context = "";
  const separator = ' -> ';
  try {
    mocha.ui('tdd').run()
      .on('test end', function(test) {
        let body = test.body.replace(/\/\/.*\n|\/\*.*\*\//g, '');
        body = body.replace(/\s+/g, ' ');
        const obj = {
          title: test.title,
          context: context.slice(0, -separator.length),
          state: test.state,
          assertions: analyser(body)
        };
        tests.push(obj);
      })
      .on('end', function() {
        emitter.report = tests;
        emitter.emit('done', tests);
      })
      .on('suite', function(s) {
        context += (s.title + separator);
      })
      .on('suite end', function(s) {
        context = context.slice(0, -(s.title.length + separator.length));
      });
  } catch (e) {
    throw e;
  }
};

// âœ… Wrap emitter as a default export
export default emitter;
